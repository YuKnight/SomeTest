Android开发实践：常用NDK命令行参数

Android提供了NDK工具，用来编译native代码（c/c++），该工具配置好了相关的交叉编译环境和工具链，只需要你简单地编写几个.mk文件即可将你的c/c++代码编译为Android的java工程/Android手机可以识别、加载和运行的库或者应用程序。

默认情况下，使用NDK编译c/c++代码，需要将该代码放置到任一个Android应用工程的jni目录下，然后编写相应的Android.mk文件，并执行ndk-build命令完成编译。其实你也是可以在任意目录下去编译native代码的，只需要在ndk-build命令后面添加相应的命令行参数即可，这里给出一些常用的ndk-build命令行参数，方便大家灵活地使用NDK编译自己的native代码，具体的示例我将会在后续的文章中给出。

1. ndk-build NDK_LOG=1

用于配置LOG级别，打印ndk编译时的详细输出信息

2. ndk-build NDK_PROJECT_PATH=.

指定NDK编译的代码路径为当前目录，如果不配置，则必须把工程代码放到Android工程的jni目录下

3. ndk-build APP_BUILD_SCRIPT=./Android.mk

指定NDK编译使用的Android.mk文件

4. ndk-build NDK_APP_APPLICATION_MK=./Application.mk

指定NDK编译使用的application.mk文件

5. ndk-build clean

清除所有编译出来的临时文件和目标文件

6. ndk-build -B

强制重新编译已经编译完成的代码

7. ndk-build NDK_DEBUG=1

执行 debug build

8. ndk-build NDK_DEBUG=0

执行 release build

9. ndk-build NDK_OUT=./mydir

指定编译生成的文件的存放位置

10. ndk-build -C /opt/myTest/

到指定目录编译native代码